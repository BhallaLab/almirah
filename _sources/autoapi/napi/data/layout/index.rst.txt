:py:mod:`napi.data.layout`
==========================

.. py:module:: napi.data.layout

.. autoapi-nested-parse::

   Model classes to represent layouts and its components.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   napi.data.layout.Tag
   napi.data.layout.File
   napi.data.layout.Layout
   napi.data.layout.Indexer




.. py:class:: Tag(path, name, value)


   Bases: :py:obj:`napi.data.db.Base`

   Generic tag representation.

   .. py:attribute:: __tablename__
      :value: 'tags'

      

   .. py:attribute:: path
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: name
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: value
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: file
      :type: sqlalchemy.orm.Mapped[File]

      

   .. py:method:: __repr__()



.. py:class:: File(path, root)


   Bases: :py:obj:`napi.data.db.Base`

   Generic file representation.

   .. py:property:: rel_path


   .. py:attribute:: __tablename__
      :value: 'files'

      

   .. py:attribute:: path
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: root
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: layout
      :type: sqlalchemy.orm.Mapped[Layout]

      

   .. py:attribute:: tags
      :type: sqlalchemy.orm.Mapped[Dict[str, Tag]]

      

   .. py:method:: build_modified_path(changes)

      Returns the path for file given changes to tags.


   .. py:method:: __repr__()



.. py:class:: Layout(root, name=None)


   Bases: :py:obj:`napi.data.db.Base`

   Representation of file collection in a directory.

   .. py:attribute:: __tablename__
      :value: 'layouts'

      

   .. py:attribute:: root
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: name
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: files
      :type: sqlalchemy.orm.Mapped[List[File]]

      

   .. py:method:: _init_on_load()


   .. py:method:: _decipher_kind()


   .. py:method:: _decipher_prefix()


   .. py:method:: create(root, name=None, spec=None, indexer=None, index=True)
      :staticmethod:

      Factory method for Layout.


   .. py:method:: get_files(**filters)

      Return files that match criteria.


   .. py:method:: get_tag_values(name, **filters)

      Return all values available for a tag name.


   .. py:method:: __repr__()



.. py:class:: Indexer(session_manager=None)


   Index files in a Layout.

   .. py:method:: __call__(layout, valid_only=True)


   .. py:method:: _merge(obj)


   .. py:method:: _index_dir(dir)

      Iteratively index all directories in layout.


   .. py:method:: _index_file(path)

      Add valid files to index and return true if successful.


   .. py:method:: _index_tags(file)

      Add tags of file to index.


   .. py:method:: _tags_filter(**filters)


   .. py:method:: _files_filter(root, **filters)


   .. py:method:: _tag_values(root, name, **filters)


   .. py:method:: add(obj)


   .. py:method:: get(query)

      Run a query on db associated and return all results.



